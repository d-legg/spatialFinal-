# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'census_tool_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from census import Census
import pandas as pd
import geopandas as gpd
import requests
from PyQt5.QtWidgets import QMessageBox
from qgis.core import QgsVectorLayer, QgsProject
import matplotlib.pyplot as plt
from PyQt5.QtGui import QPixmap
from qgis.PyQt.QtWidgets import QLabel
import tempfile
import os
import zipfile
import shutil

c = Census("bea1b2e41993540c7b3e493a56d71c7a437a41ad")

stateFIPS = {
    'Alabama': '01',
    'Alaska': '02',
    'Arizona': '04',
    'Arkansas': '05',
    'California': '06',
    'Colorado': '08',
    'Connecticut': '09',
    'Delaware': '10',
    'District of Columbia': '11',
    'Florida': '12',
    'Georgia': '13',
    'Hawaii': '15',
    'Idaho': '16',
    'Illinois': '17',
    'Indiana': '18',
    'Iowa': '19',
    'Kansas': '20',
    'Kentucky': '21',
    'Louisiana': '22',
    'Maine': '23',
    'Maryland': '24',
    'Massachusetts': '25',
    'Michigan': '26',
    'Minnesota': '27',
    'Mississippi': '28',
    'Missouri': '29',
    'Montana': '30',
    'Nebraska': '31',
    'Nevada': '32',
    'New Hampshire': '33',
    'New Jersey': '34',
    'New Mexico': '35',
    'New York': '36',
    'North Carolina': '37',
    'North Dakota': '38',
    'Ohio': '39',
    'Oklahoma': '40',
    'Oregon': '41',
    'Pennsylvania': '42',
    'Rhode Island': '44',
    'South Carolina': '45',
    'South Dakota': '46',
    'Tennessee': '47',
    'Texas': '48',
    'Utah': '49',
    'Vermont': '50',
    'Virginia': '51',
    'Washington': '53',
    'West Virginia': '54',
    'Wisconsin': '55',
    'Wyoming': '56',
}

class PlotDialog(QtWidgets.QDialog):
    def __init__(self, pixmap, image_path):
        super().__init__()
        self.setWindowTitle("Plot")
        self.image_path = image_path
        
        # Create a label to display the image
        self.label = QtWidgets.QLabel(self)
        self.label.setPixmap(pixmap)
        
        # Create a button to download the image
        self.download_button = QtWidgets.QPushButton("Download", self)
        self.download_button.clicked.connect(lambda: self.download_image(image_path))
        
        # Create a button to close the dialog
        self.close_button = QtWidgets.QPushButton("Close", self)
        self.close_button.clicked.connect(self.close)
        
        # Create a vertical layout
        layout = QtWidgets.QVBoxLayout(self)
        
        # Add the download button, label, and close button to the layout
        layout.addWidget(self.label)
        layout.addWidget(self.download_button)
        layout.addWidget(self.close_button)
        
        self.setLayout(layout)
        
        # Set custom geometry (x, y, width, height)
        self.setGeometry(100, 100, 650, 600)
    
    def download_image(self, image_path):
        # Implement download logic here
        self.label.pixmap().save(self.image_path)


class Ui_GetCensusDialogBase(object):
    def setupUi(self, GetCensusDialogBase):
        GetCensusDialogBase.setObjectName("GetCensusDialogBase")
        GetCensusDialogBase.resize(520, 403)
        self.button_box = QtWidgets.QDialogButtonBox(GetCensusDialogBase)
        self.button_box.setGeometry(QtCore.QRect(140, 350, 341, 32))
        self.button_box.setOrientation(QtCore.Qt.Horizontal)
        self.button_box.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.button_box.setObjectName("button_box")
        self.stateBox = QtWidgets.QComboBox(GetCensusDialogBase)
        self.stateBox.setGeometry(QtCore.QRect(110, 20, 181, 21))
        self.stateBox.setObjectName("stateBox")
        self.stateBox.addItem("")
        self.stateBox.setItemText(0, "")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.stateBox.addItem("")
        self.label = QtWidgets.QLabel(GetCensusDialogBase)
        self.label.setGeometry(QtCore.QRect(10, 20, 91, 16))
        self.label.setLineWidth(1)
        self.label.setObjectName("label")
        self.addSHP = QtWidgets.QPushButton(GetCensusDialogBase)
        self.addSHP.setGeometry(QtCore.QRect(10, 350, 113, 32))
        self.addSHP.setObjectName("addSHP")
        self.plotButton = QtWidgets.QPushButton(GetCensusDialogBase)
        self.plotButton.setGeometry(QtCore.QRect(140, 350, 113, 32))
        self.plotButton.setObjectName("plotButton")
        self.label_2 = QtWidgets.QLabel(GetCensusDialogBase)
        self.label_2.setGeometry(QtCore.QRect(10, 50, 101, 16))
        self.label_2.setObjectName("label_2")
        self.countyCode = QtWidgets.QLineEdit(GetCensusDialogBase)
        self.countyCode.setGeometry(QtCore.QRect(110, 51, 181, 20))
        self.countyCode.setObjectName("countyCode")

        self.retranslateUi(GetCensusDialogBase)
        self.button_box.accepted.connect(GetCensusDialogBase.accept) # type: ignore
        self.button_box.rejected.connect(GetCensusDialogBase.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(GetCensusDialogBase)

        # –––––––––––––––––––––––––––––––– NEW STUFF HERE ––––––––––––––––––––––––––––––––
        self.plot_dialog = None   # Initialize label as a class attribute
        self.save_path = None
        self.stateBox.addItem('woadhhh')
        self.addSHP.clicked.connect(self.addShapeFile)

        ## what sets off the display dialog window, will change to a plot button on clicked like the addSHP.clicked above
        self.plotButton.clicked.connect(self.displayPlot)
    
    
    def displayPlot(self):
        if self.save_path is None:
            QMessageBox.warning(None, "Error", "Shapefile path is not set")
            return

        # Step 1: Generate image with Matplotlib
        variableList=['B08103_002E', 'B08103_003E', 'B08103_004E', 
              'B08103_005E', 'B08103_006E', 'B08103_007E']
        myData = c.acs5.state_county((variableList), '41', Census.ALL)
        myDF = pd.DataFrame(myData)
        file = gpd.read_file(self.save_path + '/tl_2021_us_county.shp')
        newDF = pd.merge(file, myDF, left_on=['STATEFP', 'COUNTYFP'], right_on=['state','county'], how='inner')
        newDF.plot(legend='TRUE', cmap='Purples')

        plt.title('Add Title')
        plt.axis('off')

        
        # Step 2: Save the image to a temporary file
        temp_file = tempfile.NamedTemporaryFile(suffix='.png', delete=False)
        temp_file.close()  # Close the file so it can be opened by QPixmap
        
        plt.savefig(temp_file.name)
        plt.close()
        
        # Step 3: Display the image in QGIS
        pixmap = QPixmap(temp_file.name)

        # Get the path to the Downloads directory
        downloads_path = os.path.join(os.path.expanduser('~'), 'Downloads')
        
        if self.plot_dialog is None:
            # Instantiate PlotDialog with the Downloads path
            self.plot_dialog = PlotDialog(pixmap, image_path=os.path.join(downloads_path, 'censusPlot.png'))
        else:
            self.plot_dialog.label.setPixmap(pixmap)

        self.plot_dialog.show()


    def addShapeFile(self):
        print('addShapeFile()')

        stateName = self.stateBox.currentText()

        url = "https://www2.census.gov/geo/tiger/TIGER2021/COUNTY/tl_2021_us_county.zip"
        zip_path, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save Shapefile", "", "Shapefile (*.zip)")

        if zip_path:
            try:
                response = requests.get(url)
                with open(zip_path, 'wb') as f:
                    f.write(response.content)
                QMessageBox.information(None, "Download Complete", "Shapefile downloaded successfully!")

                # Extract the contents of the ZIP file
                with zipfile.ZipFile(zip_path, 'r') as zip_ref:
                    zip_ref.extractall(os.path.dirname(zip_path))

                # Set self.save_path to the directory containing the extracted files
                self.save_path = os.path.dirname(zip_path)

                # Add the shapefile as a vector layer to the QGIS map canvas
                layer = QgsVectorLayer(os.path.join(self.save_path, 'tl_2021_us_county.shp'), "MyShapefile", "ogr")
                if not layer.isValid():
                    QMessageBox.critical(None, "Error", "Failed to load shapefile")
                    return
                QgsProject.instance().addMapLayer(layer)
                QMessageBox.information(None, "Layer Added", "Shapefile added to QGIS layers!")

            except Exception as e:
                QMessageBox.critical(None, "Error", f"Failed to download shapefile: {str(e)}")

        print(self.save_path)    



    def retranslateUi(self, GetCensusDialogBase):
        _translate = QtCore.QCoreApplication.translate
        GetCensusDialogBase.setWindowTitle(_translate("GetCensusDialogBase", "Census Helper Plugin"))
        self.stateBox.setItemText(1, _translate("GetCensusDialogBase", "Alabama"))
        self.stateBox.setItemText(2, _translate("GetCensusDialogBase", "Alaska"))
        self.stateBox.setItemText(3, _translate("GetCensusDialogBase", "Arizona"))
        self.stateBox.setItemText(4, _translate("GetCensusDialogBase", "Arkansas"))
        self.stateBox.setItemText(5, _translate("GetCensusDialogBase", "California"))
        self.stateBox.setItemText(6, _translate("GetCensusDialogBase", "Colorado"))
        self.stateBox.setItemText(7, _translate("GetCensusDialogBase", "Connecticut"))
        self.stateBox.setItemText(8, _translate("GetCensusDialogBase", "Delaware"))
        self.stateBox.setItemText(9, _translate("GetCensusDialogBase", "Florida"))
        self.stateBox.setItemText(10, _translate("GetCensusDialogBase", "Georgia"))
        self.stateBox.setItemText(11, _translate("GetCensusDialogBase", "Hawaii"))
        self.stateBox.setItemText(12, _translate("GetCensusDialogBase", "Idaho"))
        self.stateBox.setItemText(13, _translate("GetCensusDialogBase", "Illinois"))
        self.stateBox.setItemText(14, _translate("GetCensusDialogBase", "Indiana"))
        self.stateBox.setItemText(15, _translate("GetCensusDialogBase", "Iowa"))
        self.stateBox.setItemText(16, _translate("GetCensusDialogBase", "Kansas"))
        self.stateBox.setItemText(17, _translate("GetCensusDialogBase", "Kentucky"))
        self.stateBox.setItemText(18, _translate("GetCensusDialogBase", "Louisiana"))
        self.stateBox.setItemText(19, _translate("GetCensusDialogBase", "Maine"))
        self.stateBox.setItemText(20, _translate("GetCensusDialogBase", "Maryland"))
        self.stateBox.setItemText(21, _translate("GetCensusDialogBase", "Massachusetts"))
        self.stateBox.setItemText(22, _translate("GetCensusDialogBase", "Michigan"))
        self.stateBox.setItemText(23, _translate("GetCensusDialogBase", "Minnesota"))
        self.stateBox.setItemText(24, _translate("GetCensusDialogBase", "Mississippi"))
        self.stateBox.setItemText(25, _translate("GetCensusDialogBase", "Missouri"))
        self.stateBox.setItemText(26, _translate("GetCensusDialogBase", "Montana"))
        self.stateBox.setItemText(27, _translate("GetCensusDialogBase", "Nebraska"))
        self.stateBox.setItemText(28, _translate("GetCensusDialogBase", "Nevada"))
        self.stateBox.setItemText(29, _translate("GetCensusDialogBase", "New Hampshire"))
        self.stateBox.setItemText(30, _translate("GetCensusDialogBase", "New Jersey"))
        self.stateBox.setItemText(31, _translate("GetCensusDialogBase", "New Mexico"))
        self.stateBox.setItemText(32, _translate("GetCensusDialogBase", "New York"))
        self.stateBox.setItemText(33, _translate("GetCensusDialogBase", "North Carolina"))
        self.stateBox.setItemText(34, _translate("GetCensusDialogBase", "North Dakota"))
        self.stateBox.setItemText(35, _translate("GetCensusDialogBase", "Ohio"))
        self.stateBox.setItemText(36, _translate("GetCensusDialogBase", "Oklahoma"))
        self.stateBox.setItemText(37, _translate("GetCensusDialogBase", "Oregon"))
        self.stateBox.setItemText(38, _translate("GetCensusDialogBase", "Pennsylvania"))
        self.stateBox.setItemText(39, _translate("GetCensusDialogBase", "Rhode Island"))
        self.stateBox.setItemText(40, _translate("GetCensusDialogBase", "South Carolina"))
        self.stateBox.setItemText(41, _translate("GetCensusDialogBase", "South Dakota"))
        self.stateBox.setItemText(42, _translate("GetCensusDialogBase", "Tennessee"))
        self.stateBox.setItemText(43, _translate("GetCensusDialogBase", "Texas"))
        self.stateBox.setItemText(44, _translate("GetCensusDialogBase", "Utah"))
        self.stateBox.setItemText(45, _translate("GetCensusDialogBase", "Vermont"))
        self.stateBox.setItemText(46, _translate("GetCensusDialogBase", "Virginia"))
        self.stateBox.setItemText(47, _translate("GetCensusDialogBase", "Washington"))
        self.stateBox.setItemText(48, _translate("GetCensusDialogBase", "West Virginia"))
        self.stateBox.setItemText(49, _translate("GetCensusDialogBase", "Wisconsin"))
        self.stateBox.setItemText(50, _translate("GetCensusDialogBase", "Wyoming"))
        self.label.setText(_translate("GetCensusDialogBase", "Select State:"))
        self.addSHP.setText(_translate("GetCensusDialogBase", "Add shapefile"))
        self.plotButton.setText(_translate("GetCensusDialogBase", "Plot"))
        self.label_2.setText(_translate("GetCensusDialogBase", "Insert County:"))
        self.countyCode.setPlaceholderText(_translate("GetCensusDialogBase", "Insert FIPS code (001,  031...)"))
